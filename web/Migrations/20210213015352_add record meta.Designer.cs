// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ThanhTuan.Quiz.DBContext;

namespace dmc_auth.Migrations
{
  [DbContext(typeof(ApplicationDbContext))]
  [Migration("20210213015352_add record meta")]
  partial class addrecordmeta
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
          .HasAnnotation("ProductVersion", "3.1.6")
          .HasAnnotation("Relational:MaxIdentifierLength", 63);

      modelBuilder.Entity("ThanhTuan.Quiz.Entities.AnswerOption", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<string>("Content")
                      .HasColumnType("text");

            b.Property<DateTimeOffset?>("CreatedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<string>("CreatedBy")
                      .HasColumnType("text");

            b.Property<DateTimeOffset?>("DeletedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<string>("DeletedBy")
                      .HasColumnType("text");

            b.Property<bool>("IsCorrect")
                      .HasColumnType("boolean");

            b.Property<int>("QuestionId")
                      .HasColumnType("integer");

            b.HasKey("Id");

            b.HasIndex("QuestionId");

            b.ToTable("AnswerOptions");
          });

      modelBuilder.Entity("ThanhTuan.Quiz.Entities.Exam", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<DateTimeOffset?>("CreatedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<string>("CreatedBy")
                      .HasColumnType("text");

            b.Property<DateTimeOffset?>("DeletedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<string>("DeletedBy")
                      .HasColumnType("text");

            b.Property<string>("Description")
                      .HasColumnType("text");

            b.Property<string>("Title")
                      .HasColumnType("text");

            b.HasKey("Id");

            b.ToTable("Exams");
          });

      modelBuilder.Entity("ThanhTuan.Quiz.Entities.Question", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<string>("Content")
                      .HasColumnType("text");

            b.Property<DateTimeOffset?>("CreatedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<string>("CreatedBy")
                      .HasColumnType("text");

            b.Property<DateTimeOffset?>("DeletedAt")
                      .HasColumnType("timestamp with time zone");

            b.Property<string>("DeletedBy")
                      .HasColumnType("text");

            b.Property<int>("ExamId")
                      .HasColumnType("integer");

            b.HasKey("Id");

            b.HasIndex("ExamId");

            b.ToTable("Questions");
          });

      modelBuilder.Entity("ThanhTuan.Quiz.Entities.AnswerOption", b =>
          {
            b.HasOne("ThanhTuan.Quiz.Entities.Question", "Question")
                      .WithMany("AnswerOptions")
                      .HasForeignKey("QuestionId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("ThanhTuan.Quiz.Entities.Question", b =>
          {
            b.HasOne("ThanhTuan.Quiz.Entities.Exam", "Exam")
                      .WithMany("Questions")
                      .HasForeignKey("ExamId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });
#pragma warning restore 612, 618
    }
  }
}
